# This is a basic workflow to help you get started with Actions

name: CI
env:
  EB_PACKAGE_S3_BUCKET_NAME: "ИМЯ, ГДЕ PACKAGES ХРАНИТСЯ БУДУТ"
  EB_APPLICATION_NAME: "MyFlask"
  EB_ENVIRONMENT_NAME: "MyFlask-env"
  DEPLOY_PACKAGE_NAME: "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-west-2"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  my_ci_part:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    steps:
      - name: git clone our repo
        uses: actions/checkout@v1
        
      - name: print
        run: echo "Hello"
        
      - name:   create zip deployment package
        run: |
          echo "A initial message"
          zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
          zip -sf ${{ env.DEPLOY_PACKAGE_NAME }}
      - name: Configure my AWS Credentials
        run: echo "conect to repo"
#         uses: aws/actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id : ${{ secrets.MY_AWS_ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
#           aws-region:  ${{ env.AWS_REGION_NAME }}
      - name: copy Deployment package to s3 bucket
#         run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        run: echo "move to repo"
      - name: print happy message about completing
        run: echo "finished successfully"
  my_cd_part:
    runs-on: ubuntu-latest
    needs: [my_ci_part]
    
    steps:
      - name: the same as in CI with aws
#         uses: aws/actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id : ${{ secrets.MY_AWS_ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
#           aws-region:  ${{ env.AWS_REGION_NAME }}
      - name: Create new elastic beanstalk app
        run: |
          run: echo "conect to repo 2 time"
          aws elastickbeanstalk create-application-version \
          --aplication-name ${{ env.EB_APPLICATION_NAME }} \ 
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}" ,S3Key="${{ env.DEPLOY_PACKAGE_NAME }}"\
          --version-label "Ver-${{github.sha}}" \ 
          --description "commit sha -${{github.sha}}"
          
      - name: deploy new EB app
        run: echo "deploy new aPP"
#         run: aws  elastickbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version label "Ver-${{github.sha}}"
      - name: happy mesage
        run: echo "deploy successfully"
        
